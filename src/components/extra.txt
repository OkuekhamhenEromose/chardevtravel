
import { motion, useInView, Variants } from 'framer-motion';
import { useRef, useState, useEffect } from 'react';
import { CheckCircle, Users, Award, Clock } from 'lucide-react';

const About = () => {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: "-100px" });

  // State for animated numbers
  const [animatedNumbers, setAnimatedNumbers] = useState([
    { current: 0, target: 50000, suffix: "+" }, // Happy Travelers
    { current: 0, target: 200, suffix: "+" },    // Destinations
    { current: 0, target: 15, suffix: "+" },     // Years Experience
    { current: 0, target: 98, suffix: "%" }     // Satisfaction Rate
  ]);

  // Animation effect for numbers
  useEffect(() => {
    if (isInView) {
      const duration = 4000; // Animation duration in ms
      const startTime = performance.now();

      const animate = (currentTime: number) => {
        const elapsedTime = currentTime - startTime;
        const progress = Math.min(elapsedTime / duration, 1);

        setAnimatedNumbers(prev => prev.map((item) => {
          const newValue = Math.floor(progress * item.target);
          return { ...item, current: newValue };
        }));

        if (progress < 1) {
          requestAnimationFrame(animate);
        }
      };

      requestAnimationFrame(animate);
    }
  }, [isInView]);

  const containerVariants: Variants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.3,
        delayChildren: 0.2
      }
    }
  };

  const itemVariants: Variants = {
    hidden: { opacity: 0, y: 60 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.8,
        ease: "easeOut"
      }
    }
  };

  const imageVariants: Variants = {
    hidden: { opacity: 0, scale: 0.8, rotateY: -15 },
    visible: {
      opacity: 1,
      scale: 1,
      rotateY: 0,
      transition: {
        duration: 1,
        ease: "easeOut"
      }
    }
  };

  const badgeVariants: Variants = {
    hidden: { scale: 0, rotate: -180 },
    visible: {
      scale: 1,
      rotate: 0,
      transition: {
        type: "spring",
        stiffness: 200,
        damping: 15,
        delay: 1
      }
    }
  };

  const featureVariants: Variants = {
    hidden: { opacity: 0, x: -30 },
    visible: (i: number) => ({
      opacity: 1,
      x: 0,
      transition: {
        delay: 0.5 + i * 0.2,
        duration: 0.6,
        ease: "easeOut"
      }
    })
  };

  const statsVariants: Variants = {
    hidden: { scale: 0 },
    visible: {
      scale: 1,
      transition: {
        type: "spring",
        stiffness: 100,
        damping: 15
      }
    }
  };

  const features = [
    {
      icon: Users,
      title: "Expert Local Guides",
      description: "Our passionate local experts share hidden gems and authentic experiences."
    },
    {
      icon: Award,
      title: "Sustainable Tourism",
      description: "We're committed to responsible travel that benefits local communities."
    },
    {
      icon: Clock,
      title: "24/7 Support",
      description: "Our dedicated team is always here to ensure your journey is seamless."
    }
  ];

  const stats = [
    { label: "Happy Travelers" },
    { label: "Destinations" },
    { label: "Years Experience" },
    { label: "Satisfaction Rate" }
  ];

  return (
    <section className="py-20 bg-gradient-to-br from-gray-50 to-blue-50 relative overflow-hidden" id="about" ref={ref}>
      {/* Background Elements */}
      <motion.div
        className="absolute top-20 left-10 w-32 h-32 bg-sky-200/30 rounded-full blur-3xl"
        animate={{
          scale: [1, 1.2, 1],
          opacity: [0.3, 0.5, 0.3]
        }}
        transition={{
          duration: 4,
          repeat: Infinity,
          ease: "easeInOut"
        }}
      />
      <motion.div
        className="absolute bottom-20 right-10 w-40 h-40 bg-blue-200/30 rounded-full blur-3xl"
        animate={{
          scale: [1.2, 1, 1.2],
          opacity: [0.5, 0.3, 0.5]
        }}
        transition={{
          duration: 5,
          repeat: Infinity,
          ease: "easeInOut"
        }}
      />

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate={isInView ? "visible" : "hidden"}
          className="grid lg:grid-cols-2 gap-16 items-center"
        >
          {/* Image Section */}
          <motion.div variants={itemVariants} className="relative">
            <motion.div
              variants={imageVariants}
              className="relative"
              whileHover={{ scale: 1.02 }}
              transition={{ duration: 0.3 }}
            >
              <img
                src="https://images.pexels.com/photos/1624438/pexels-photo-1624438.jpeg?auto=compress&cs=tinysrgb&w=800"
                alt="Happy man standing on cliff"
                className="w-full h-96 lg:h-[500px] object-cover rounded-3xl shadow-2xl"
              />
              <motion.div 
                className="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent rounded-3xl"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.5 }}
              />
            </motion.div>
            
            <motion.div
              variants={badgeVariants}
              className="absolute -bottom-8 -right-8 w-32 h-32 bg-gradient-to-br from-sky-400 to-sky-600 rounded-full flex items-center justify-center shadow-2xl"
              whileHover={{ 
                scale: 1.1,
                rotate: 5,
                boxShadow: "0 25px 50px rgba(14, 165, 233, 0.4)"
              }}
            >
              <div className="text-center text-white">
                <motion.span 
                  className="text-3xl font-bold block"
                  initial={{ scale: 0 }}
                  animate={{ scale: 1 }}
                  transition={{ delay: 1.5, type: "spring" }}
                >
                  15+
                </motion.span>
                <span className="text-sm font-medium">Years</span>
              </div>
            </motion.div>

            {/* Floating Stats */}
            <motion.div
              className="absolute top-8 left-8 bg-white/90 backdrop-blur-sm rounded-2xl p-4 shadow-lg"
              initial={{ opacity: 0, scale: 0.8, y: -20 }}
              animate={{ opacity: 1, scale: 1, y: 0 }}
              transition={{ delay: 1.2 }}
              whileHover={{ scale: 1.05 }}
            >
              <div className="flex items-center space-x-3">
                <CheckCircle className="w-6 h-6 text-green-500" />
                <div>
                  <p className="font-bold text-gray-900">Verified</p>
                  <p className="text-sm text-gray-600">Travel Agency</p>
                </div>
              </div>
            </motion.div>
          </motion.div>

          {/* Content Section */}
          <motion.div variants={itemVariants} className="space-y-8">
            <div>
              <motion.h3 
                className="text-sky-500 font-semibold text-lg mb-2"
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: 0.3 }}
              >
                About Wanderlust
              </motion.h3>
              <motion.h2 
                className="text-4xl lg:text-6xl font-bold text-gray-900 leading-tight mb-6"
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.4 }}
              >
                Your Journey, Our{' '}
                <motion.span
                  className="text-transparent bg-clip-text bg-gradient-to-r from-sky-500 to-blue-600"
                  whileHover={{ scale: 1.05 }}
                  transition={{ duration: 0.3 }}
                >
                  Passion
                </motion.span>
              </motion.h2>
            </div>
            
            <motion.p 
              className="text-gray-600 text-lg leading-relaxed"
              variants={itemVariants}
            >
              For over 15 years, Wanderlust has been crafting extraordinary travel experiences 
              that go beyond the ordinary. We believe that every journey should be a story worth 
              telling, filled with authentic moments and breathtaking discoveries.
            </motion.p>

            {/* Features */}
            <motion.div className="space-y-6">
              {features.map((feature, index) => {
                const IconComponent = feature.icon;
                return (
                  <motion.div
                    key={index}
                    custom={index}
                    variants={featureVariants}
                    className="flex items-start space-x-4 group"
                    whileHover={{ x: 10 }}
                    transition={{ duration: 0.3 }}
                  >
                    <motion.div
                      className="w-12 h-12 bg-gradient-to-br from-sky-100 to-sky-200 rounded-xl flex items-center justify-center group-hover:from-sky-200 group-hover:to-sky-300 transition-all duration-300"
                      whileHover={{ scale: 1.1, rotate: 5 }}
                    >
                      <IconComponent className="w-6 h-6 text-sky-600" />
                    </motion.div>
                    <div>
                      <h4 className="font-semibold text-gray-900 mb-2 text-lg group-hover:text-sky-600 transition-colors duration-300">
                        {feature.title}
                      </h4>
                      <p className="text-gray-600 leading-relaxed">{feature.description}</p>
                    </div>
                  </motion.div>
                );
              })}
            </motion.div>

            {/* Stats Grid */}
            <motion.div 
              className="grid grid-cols-2 gap-6 pt-8"
              variants={containerVariants}
            >
              {stats.map((stat, index) => (
                <motion.div
                  key={index}
                  variants={statsVariants}
                  className="text-center p-4 bg-white/60 backdrop-blur-sm rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300"
                  whileHover={{ 
                    scale: 1.05,
                    backgroundColor: "rgba(255,255,255,0.8)"
                  }}
                >
                  <motion.div
                    className="text-3xl font-bold text-sky-600 mb-1"
                    initial={{ scale: 0 }}
                    animate={{ scale: 1 }}
                    transition={{ 
                      delay: 1 + index * 0.1,
                      type: "spring",
                      stiffness: 200
                    }}
                  >
                    {index === 0 && animatedNumbers[0].current.toLocaleString() + animatedNumbers[0].suffix}
                    {index === 1 && animatedNumbers[1].current + animatedNumbers[1].suffix}
                    {index === 2 && animatedNumbers[2].current + animatedNumbers[2].suffix}
                    {index === 3 && animatedNumbers[3].current + animatedNumbers[3].suffix}
                  </motion.div>
                  <div className="text-gray-600 font-medium">{stat.label}</div>
                </motion.div>
              ))}
            </motion.div>

            <motion.button 
              className="bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-600 hover:to-blue-700 text-white px-8 py-4 rounded-full font-semibold text-lg shadow-lg hover:shadow-xl transition-all duration-300"
              variants={itemVariants}
              whileHover={{ 
                scale: 1.05,
                boxShadow: "0 20px 40px rgba(14, 165, 233, 0.4)"
              }}
              whileTap={{ scale: 0.95 }}
            >
              Learn More About Us
            </motion.button>
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
};

export default About;


import { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence, useInView, Variants } from 'framer-motion';
import { MapPin, Star, Heart, Camera } from 'lucide-react';

const destinations = [
  {
    id: 1,
    name: 'Santorini, Greece',
    image: 'https://images.pexels.com/photos/1010657/pexels-photo-1010657.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Experience the magic of white-washed buildings and stunning sunsets over the Aegean Sea in this iconic Greek island paradise.',
    rating: 4.9,
    price: '$1,299',
    category: 'Romantic'
  },
  {
    id: 2,
    name: 'Bali, Indonesia',
    image: 'https://images.pexels.com/photos/2474690/pexels-photo-2474690.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Discover tropical paradise with ancient temples, lush rice terraces, pristine beaches, and vibrant cultural traditions.',
    rating: 4.8,
    price: '$899',
    category: 'Adventure'
  },
  {
    id: 3,
    name: 'Tokyo, Japan',
    image: 'https://images.pexels.com/photos/2506923/pexels-photo-2506923.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Immerse yourself in the perfect blend of traditional culture and modern innovation in this bustling metropolis.',
    rating: 4.9,
    price: '$1,599',
    category: 'Cultural'
  },
  {
    id: 4,
    name: 'Machu Picchu, Peru',
    image: 'https://images.pexels.com/photos/2356045/pexels-photo-2356045.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Journey to the ancient Incan citadel high in the Andes Mountains, one of the New Seven Wonders of the World.',
    rating: 4.9,
    price: '$1,199',
    category: 'Historical'
  },
  {
    id: 5,
    name: 'Iceland',
    image: 'https://images.pexels.com/photos/1760900/pexels-photo-1760900.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Witness the Northern Lights and explore dramatic landscapes of fire and ice, geysers, and breathtaking waterfalls.',
    rating: 4.8,
    price: '$1,799',
    category: 'Nature'
  },
  {
    id: 6,
    name: 'Maldives',
    image: 'https://images.pexels.com/photos/1287460/pexels-photo-1287460.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Relax in overwater bungalows surrounded by crystal-clear turquoise waters and pristine coral reefs.',
    rating: 4.9,
    price: '$2,299',
    category: 'Luxury'
  },
  {
    id: 7,
    name: 'Paris, France',
    image: 'https://images.pexels.com/photos/338515/pexels-photo-338515.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Fall in love with the City of Light, featuring iconic landmarks, world-class cuisine, and romantic Seine river cruises.',
    rating: 4.8,
    price: '$1,399',
    category: 'Romantic'
  },
  {
    id: 8,
    name: 'Dubai, UAE',
    image: 'https://images.pexels.com/photos/1470405/pexels-photo-1470405.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Experience luxury and innovation in this modern desert oasis with towering skyscrapers and golden beaches.',
    rating: 4.7,
    price: '$1,699',
    category: 'Luxury'
  }
];

const TopDestinations = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [itemsPerPage, setItemsPerPage] = useState(3);
  // Removed unused isTransitioning state
  const [likedDestinations, setLikedDestinations] = useState<number[]>([]);
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: "-100px" });

  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth < 768) {
        setItemsPerPage(1);
      } else if (window.innerWidth < 1024) {
        setItemsPerPage(2);
      } else {
        setItemsPerPage(3);
      }
    };

    handleResize();
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // Auto-scroll every 4 seconds with smooth transition
  useEffect(() => {
    const interval = setInterval(() => {
      setTimeout(() => {
        setCurrentIndex((prevIndex) => {
          const maxIndex = destinations.length - itemsPerPage;
          return prevIndex >= maxIndex ? 0 : prevIndex + 1;
        });
      }, 300);
    }, 4000);

    return () => clearInterval(interval);
  }, [itemsPerPage]);

  const getVisibleDestinations = () => {
    const visible = [];
    for (let i = 0; i < itemsPerPage; i++) {
      const index = (currentIndex + i) % destinations.length;
      visible.push(destinations[index]);
    }
    return visible;
  };

  const toggleLike = (destinationId: number) => {
    setLikedDestinations(prev => 
      prev.includes(destinationId) 
        ? prev.filter(id => id !== destinationId)
        : [...prev, destinationId]
    );
  };

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
        delayChildren: 0.1
      }
    }
  };

  const headerVariants: Variants = {
    hidden: { opacity: 0, y: 50 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.8,
        ease: "easeOut"
      }
    }
  };
  const slideVariants: Variants = {
    enter: {
      x: 300,
      opacity: 0,
      scale: 0.8
    },
    center: {
      x: 0,
      opacity: 1,
      scale: 1,
      transition: {
        duration: 0.7,
        ease: "easeOut"
      }
    },
    exit: {
      x: -300,
      opacity: 0,
      scale: 0.8,
      transition: {
        duration: 0.5
      }
    }
  };

  const visibleDestinations = getVisibleDestinations();

  return (
    <section className="py-20 bg-white relative overflow-hidden" id="destinations" ref={ref}>
      {/* Background Elements */}
      <motion.div
        className="absolute top-0 right-0 w-96 h-96 bg-gradient-to-bl from-sky-100/50 to-transparent rounded-full blur-3xl"
        animate={{
          scale: [1, 1.2, 1],
          opacity: [0.3, 0.6, 0.3]
        }}
        transition={{
          duration: 8,
          repeat: Infinity,
          ease: "easeInOut"
        }}
      />

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate={isInView ? "visible" : "hidden"}
          className="text-center mb-16"
        >
          <motion.h3 
            variants={headerVariants}
            className="text-sky-500 font-semibold text-lg mb-2"
          >
            Explore The World
          </motion.h3>
          <motion.h2 
            variants={headerVariants}
            className="text-4xl lg:text-6xl font-bold text-gray-900 mb-4"
          >
            Top{' '}
            <motion.span
              className="text-transparent bg-clip-text bg-gradient-to-r from-sky-500 to-blue-600"
              whileHover={{ scale: 1.05 }}
            >
              Destinations
            </motion.span>
          </motion.h2>
          <motion.p 
            variants={headerVariants}
            className="text-gray-600 text-lg max-w-2xl mx-auto"
          >
            Discover our handpicked collection of the world's most breathtaking destinations, 
            each offering unique experiences and unforgettable memories.
          </motion.p>
        </motion.div>

        {/* Auto-scrolling Destinations */}
        <motion.div 
          className="relative overflow-hidden bg-gradient-to-r from-sky-50/50 via-transparent to-blue-50/50 rounded-3xl p-8"
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.8, delay: 0.3 }}
        >
          {/* Auto-scroll indicator */}
          <motion.div 
            className="absolute top-4 left-1/2 transform -translate-x-1/2 z-10"
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 1 }}
          >
            <motion.div 
              className="bg-white/90 backdrop-blur-sm px-6 py-3 rounded-full shadow-lg border border-white/20"
              whileHover={{ scale: 1.05 }}
            >
              <span className="text-sm text-gray-600 font-medium flex items-center">
                <motion.span
                  animate={{ rotate: 360 }}
                  transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
                  className="mr-2"
                >
                  🎬
                </motion.span>
                Auto-scrolling every 4 seconds • Right to Left
              </span>
            </motion.div>
          </motion.div>

          {/* Destinations Container */}
          <div className="relative h-[700px] mt-8 overflow-hidden">
            <AnimatePresence mode="wait">
              <motion.div
                key={currentIndex}
                variants={slideVariants}
                initial="enter"
                animate="center"
                exit="exit"
                className="absolute inset-0 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
              >
                {visibleDestinations.map((destination, index) => {
                  const isLiked = likedDestinations.includes(destination.id);
                  
                  return (
                    <motion.div
                      key={`${destination.id}-${currentIndex}-${index}`}
                      className="group cursor-pointer bg-white rounded-3xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-500"
                      whileHover={{ 
                        y: -10,
                        scale: 1.02,
                        boxShadow: "0 25px 50px rgba(0,0,0,0.15)"
                      }}
                      initial={{ opacity: 0, y: 50 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                    >
                      <div className="relative overflow-hidden">
                        <motion.img
                          src={destination.image}
                          alt={destination.name}
                          className="w-full h-72 object-cover"
                          whileHover={{ scale: 1.1 }}
                          transition={{ duration: 0.6 }}
                        />
                        
                        {/* Gradient Overlay */}
                        <motion.div 
                          className="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent"
                          initial={{ opacity: 0 }}
                          whileHover={{ opacity: 1 }}
                          transition={{ duration: 0.3 }}
                        />

                        {/* Category Badge */}
                        <motion.div
                          className="absolute top-4 left-4 bg-white/90 backdrop-blur-sm px-3 py-1 rounded-full"
                          initial={{ opacity: 0, scale: 0.8 }}
                          animate={{ opacity: 1, scale: 1 }}
                          transition={{ delay: 0.5 + index * 0.1 }}
                        >
                          <span className="text-sm font-semibold text-sky-600">
                            {destination.category}
                          </span>
                        </motion.div>

                        {/* Like Button */}
                        <motion.button
                          className="absolute top-4 right-4 bg-white/90 backdrop-blur-sm p-2 rounded-full"
                          onClick={(e) => {
                            e.stopPropagation();
                            toggleLike(destination.id);
                          }}
                          whileHover={{ scale: 1.1 }}
                          whileTap={{ scale: 0.9 }}
                          initial={{ opacity: 0, scale: 0.8 }}
                          animate={{ opacity: 1, scale: 1 }}
                          transition={{ delay: 0.6 + index * 0.1 }}
                        >
                          <Heart 
                            className={`w-5 h-5 transition-colors duration-300 ${
                              isLiked ? 'text-red-500 fill-current' : 'text-gray-600'
                            }`}
                          />
                        </motion.button>

                        {/* Price Tag */}
                        <motion.div
                          className="absolute bottom-4 right-4 bg-sky-500 text-white px-4 py-2 rounded-full font-bold"
                          initial={{ opacity: 0, y: 20 }}
                          whileHover={{ opacity: 1, y: 0 }}
                          transition={{ duration: 0.3 }}
                        >
                          {destination.price}
                        </motion.div>

                        {/* Overlay Content */}
                        <motion.div
                          className="absolute bottom-4 left-4 right-16 text-white"
                          initial={{ opacity: 0, y: 20 }}
                          whileHover={{ opacity: 1, y: 0 }}
                          transition={{ duration: 0.3 }}
                        >
                          <div className="bg-black/30 backdrop-blur-sm rounded-lg p-3">
                            <h4 className="font-bold text-lg mb-1">{destination.name}</h4>
                            <div className="flex items-center space-x-2">
                              <Star className="w-4 h-4 text-yellow-400 fill-current" />
                              <span className="text-sm">{destination.rating}</span>
                              <Camera className="w-4 h-4 ml-2" />
                            </div>
                          </div>
                        </motion.div>
                      </div>
                      
                      <motion.div 
                        className="p-6"
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        transition={{ delay: 0.3 + index * 0.1 }}
                      >
                        <div className="flex items-center mb-3">
                          <MapPin className="w-5 h-5 text-sky-500 mr-2 flex-shrink-0" />
                          <motion.h3 
                            className="text-xl font-bold text-gray-900 group-hover:text-sky-500 transition-colors duration-300"
                            whileHover={{ x: 5 }}
                          >
                            {destination.name}
                          </motion.h3>
                        </div>
                        
                        <p className="text-gray-600 leading-relaxed mb-4 line-clamp-3">
                          {destination.description}
                        </p>
                        
                        <div className="flex items-center justify-between">
                          <motion.button 
                            className="text-sky-500 font-semibold hover:text-sky-600 transition-all duration-300 flex items-center space-x-2"
                            whileHover={{ x: 5 }}
                          >
                            <span>Learn More</span>
                            <motion.span
                              animate={{ x: [0, 5, 0] }}
                              transition={{ duration: 1.5, repeat: Infinity }}
                            >
                              →
                            </motion.span>
                          </motion.button>
                          
                          <div className="flex items-center space-x-1">
                            <Star className="w-4 h-4 text-yellow-400 fill-current" />
                            <span className="text-sm font-medium text-gray-600">
                              {destination.rating}
                            </span>
                          </div>
                        </div>
                      </motion.div>
                    </motion.div>
                  );
                })}
              </motion.div>
            </AnimatePresence>
          </div>
        </motion.div>

        {/* Progress indicator */}
        <motion.div 
          className="mt-8"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 1.5 }}
        >
          <div className="bg-gray-200 rounded-full h-2 max-w-md mx-auto overflow-hidden">
            <motion.div 
              className="bg-gradient-to-r from-sky-400 to-sky-600 h-full rounded-full"
              initial={{ width: "0%" }}
              animate={{ 
                width: `${((currentIndex + 1) / (destinations.length - itemsPerPage + 1)) * 100}%` 
              }}
              transition={{ duration: 0.5, ease: "easeOut" }}
            />
          </div>
          <p className="text-center text-sm text-gray-500 mt-2">
            Destination {currentIndex + 1} of {destinations.length - itemsPerPage + 1}
          </p>
        </motion.div>

        {/* Destination counter */}
        <motion.div 
          className="text-center mt-8"
          initial={{ opacity: 0, scale: 0.8 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ delay: 2 }}
        >
          <motion.div 
            className="inline-flex items-center space-x-3 bg-white rounded-full px-8 py-4 shadow-lg border border-gray-100"
            whileHover={{ 
              scale: 1.05,
              boxShadow: "0 20px 40px rgba(0,0,0,0.1)"
            }}
          >
            <motion.span 
              className="text-3xl"
              animate={{ rotate: [0, 10, -10, 0] }}
              transition={{ duration: 2, repeat: Infinity }}
            >
              🌍
            </motion.span>
            <span className="font-semibold text-gray-700 text-lg">
              {destinations.length} Amazing Destinations
            </span>
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
};

export default TopDestinations;


THE IMAGES AND CONTENT DID NOT SHOW IN THE IMAGE CARDS  

import { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence, useInView, Variants } from 'framer-motion';
import { MapPin, Star, Heart, Camera } from 'lucide-react';

const destinations = [
  {
    id: 1,
    name: 'Santorini, Greece',
    image: 'https://images.pexels.com/photos/1010657/pexels-photo-1010657.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Experience the magic of white-washed buildings and stunning sunsets over the Aegean Sea in this iconic Greek island paradise.',
    rating: 4.9,
    price: '$1,299',
    category: 'Romantic'
  },
  {
    id: 2,
    name: 'Bali, Indonesia',
    image: 'https://images.pexels.com/photos/2474690/pexels-photo-2474690.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Discover tropical paradise with ancient temples, lush rice terraces, pristine beaches, and vibrant cultural traditions.',
    rating: 4.8,
    price: '$899',
    category: 'Adventure'
  },
  {
    id: 3,
    name: 'Tokyo, Japan',
    image: 'https://images.pexels.com/photos/2506923/pexels-photo-2506923.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Immerse yourself in the perfect blend of traditional culture and modern innovation in this bustling metropolis.',
    rating: 4.9,
    price: '$1,599',
    category: 'Cultural'
  },
  {
    id: 4,
    name: 'Machu Picchu, Peru',
    image: 'https://images.pexels.com/photos/2356045/pexels-photo-2356045.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Journey to the ancient Incan citadel high in the Andes Mountains, one of the New Seven Wonders of the World.',
    rating: 4.9,
    price: '$1,199',
    category: 'Historical'
  },
  {
    id: 5,
    name: 'Iceland',
    image: 'https://images.pexels.com/photos/1760900/pexels-photo-1760900.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Witness the Northern Lights and explore dramatic landscapes of fire and ice, geysers, and breathtaking waterfalls.',
    rating: 4.8,
    price: '$1,799',
    category: 'Nature'
  },
  {
    id: 6,
    name: 'Maldives',
    image: 'https://images.pexels.com/photos/1287460/pexels-photo-1287460.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Relax in overwater bungalows surrounded by crystal-clear turquoise waters and pristine coral reefs.',
    rating: 4.9,
    price: '$2,299',
    category: 'Luxury'
  },
  {
    id: 7,
    name: 'Paris, France',
    image: 'https://images.pexels.com/photos/338515/pexels-photo-338515.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Fall in love with the City of Light, featuring iconic landmarks, world-class cuisine, and romantic Seine river cruises.',
    rating: 4.8,
    price: '$1,399',
    category: 'Romantic'
  },
  {
    id: 8,
    name: 'Dubai, UAE',
    image: 'https://images.pexels.com/photos/1470405/pexels-photo-1470405.jpeg?auto=compress&cs=tinysrgb&w=600',
    description: 'Experience luxury and innovation in this modern desert oasis with towering skyscrapers and golden beaches.',
    rating: 4.7,
    price: '$1,699',
    category: 'Luxury'
  }
];

const TopDestinations = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [itemsPerPage, setItemsPerPage] = useState(3);
  const [likedDestinations, setLikedDestinations] = useState<number[]>([]);
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: "-100px" });

  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth < 768) {
        setItemsPerPage(1);
      } else if (window.innerWidth < 1024) {
        setItemsPerPage(2);
      } else {
        setItemsPerPage(3);
      }
    };

    handleResize();
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // Auto-scroll every 4 seconds with smooth transition
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => 
        (prevIndex + 1) % destinations.length
      );
    }, 4000);

    return () => clearInterval(interval);
  }, [destinations.length]);

  const getVisibleDestinations = () => {
    const visible = [];
    for (let i = 0; i < itemsPerPage; i++) {
      const index = (currentIndex + i) % destinations.length;
      visible.push(destinations[index]);
    }
    return visible;
  };

  const toggleLike = (destinationId: number) => {
    setLikedDestinations(prev => 
      prev.includes(destinationId) 
        ? prev.filter(id => id !== destinationId)
        : [...prev, destinationId]
    );
  };

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
        delayChildren: 0.1
      }
    }
  };

  const headerVariants: Variants = {
    hidden: { opacity: 0, y: 50 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.8,
        ease: "easeOut"
      }
    }
  };

  const slideVariants: Variants = {
    enter: (direction: number) => ({
      x: direction > 0 ? 1000 : -1000,
      opacity: 0,
    }),
    center: {
      x: 0,
      opacity: 1,
      transition: {
        duration: 0.7,
        ease: "easeOut"
      }
    },
    exit: (direction: number) => ({
      x: direction > 0 ? -1000 : 1000,
      opacity: 0,
      transition: {
        duration: 0.5
      }
    })
  };

  const visibleDestinations = getVisibleDestinations();

  return (
    <section className="py-20 bg-white relative overflow-hidden" id="destinations" ref={ref}>
      {/* Background Elements */}
      <motion.div
        className="absolute top-0 right-0 w-96 h-96 bg-gradient-to-bl from-sky-100/50 to-transparent rounded-full blur-3xl"
        animate={{
          scale: [1, 1.2, 1],
          opacity: [0.3, 0.6, 0.3]
        }}
        transition={{
          duration: 8,
          repeat: Infinity,
          ease: "easeInOut"
        }}
      />

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate={isInView ? "visible" : "hidden"}
          className="text-center mb-16"
        >
          <motion.h3 
            variants={headerVariants}
            className="text-sky-500 font-semibold text-lg mb-2"
          >
            Explore The World
          </motion.h3>
          <motion.h2 
            variants={headerVariants}
            className="text-4xl lg:text-6xl font-bold text-gray-900 mb-4"
          >
            Top{' '}
            <motion.span
              className="text-transparent bg-clip-text bg-gradient-to-r from-sky-500 to-blue-600"
              whileHover={{ scale: 1.05 }}
            >
              Destinations
            </motion.span>
          </motion.h2>
          <motion.p 
            variants={headerVariants}
            className="text-gray-600 text-lg max-w-2xl mx-auto"
          >
            Discover our handpicked collection of the world's most breathtaking destinations, 
            each offering unique experiences and unforgettable memories.
          </motion.p>
        </motion.div>

        {/* Auto-scrolling Destinations */}
        <motion.div 
          className="relative overflow-hidden bg-gradient-to-r from-sky-50/50 via-transparent to-blue-50/50 rounded-3xl p-8"
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.8, delay: 0.3 }}
        >
          {/* Auto-scroll indicator */}
          <motion.div 
            className="absolute top-4 left-1/2 transform -translate-x-1/2 z-10"
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 1 }}
          >
            <motion.div 
              className="bg-white/90 backdrop-blur-sm px-6 py-3 rounded-full shadow-lg border border-white/20"
              whileHover={{ scale: 1.05 }}
            >
              <span className="text-sm text-gray-600 font-medium flex items-center">
                <motion.span
                  animate={{ rotate: 360 }}
                  transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
                  className="mr-2"
                >
                  🎬
                </motion.span>
                Auto-scrolling every 4 seconds • Right to Left
              </span>
            </motion.div>
          </motion.div>

          {/* Destinations Container */}
          <div className="relative h-[700px] mt-8 overflow-hidden">
            <AnimatePresence custom={1} mode="wait">
              <motion.div
                key={currentIndex}
                custom={1} // Direction (1 for right-to-left)
                variants={slideVariants}
                initial="enter"
                animate="center"
                exit="exit"
                className="absolute inset-0 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
              >
                {visibleDestinations.map((destination, index) => {
                  const isLiked = likedDestinations.includes(destination.id);
                  
                  return (
                    <motion.div
                      key={`${destination.id}-${currentIndex}-${index}`}
                      className="group cursor-pointer bg-white rounded-3xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-500"
                      whileHover={{ 
                        y: -10,
                        scale: 1.02,
                        boxShadow: "0 25px 50px rgba(0,0,0,0.15)"
                      }}
                      initial={{ opacity: 0, y: 50 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                    >
                      {/* ... (keep your existing card content) */}
                    </motion.div>
                  );
                })}
              </motion.div>
            </AnimatePresence>
          </div>
        </motion.div>

        {/* Progress indicator */}
        <motion.div 
          className="mt-8"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 1.5 }}
        >
          <div className="bg-gray-200 rounded-full h-2 max-w-md mx-auto overflow-hidden">
            <motion.div 
              className="bg-gradient-to-r from-sky-400 to-sky-600 h-full rounded-full"
              initial={{ width: "0%" }}
              animate={{ 
                width: `${((currentIndex + 1) / destinations.length) * 100}%` 
              }}
              transition={{ duration: 0.5, ease: "easeOut" }}
            />
          </div>
          <p className="text-center text-sm text-gray-500 mt-2">
            Destination {currentIndex + 1} of {destinations.length}
          </p>
        </motion.div>

        {/* Destination counter */}
        <motion.div 
          className="text-center mt-8"
          initial={{ opacity: 0, scale: 0.8 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ delay: 2 }}
        >
          <motion.div 
            className="inline-flex items-center space-x-3 bg-white rounded-full px-8 py-4 shadow-lg border border-gray-100"
            whileHover={{ 
              scale: 1.05,
              boxShadow: "0 20px 40px rgba(0,0,0,0.1)"
            }}
          >
            <motion.span 
              className="text-3xl"
              animate={{ rotate: [0, 10, -10, 0] }}
              transition={{ duration: 2, repeat: Infinity }}
            >
              🌍
            </motion.span>
            <span className="font-semibold text-gray-700 text-lg">
              {destinations.length} Amazing Destinations
            </span>
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
};

export default TopDestinations;


TOP COMPANIES 

import Expedia from '../assets/images/Expedia-Logo-2010-removebg-preview.png';
import Hotel from '../assets/images/Hotels.com-Logo.jpg';
import TripAdvisor from '../assets/images/tripadvisor.png';
import Skyscanner from '../assets/images/Skyscanner-Logo-Vector.png';
import Agoda from '../assets/images/Agoda_logo_2019.svg.png';

const companies = [
  { 
    name: 'Airbnb', 
    logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/Airbnb_Logo_B%C3%A9lo.svg/2560px-Airbnb_Logo_B%C3%A9lo.svg.png' 
  },
  { 
    name: 'Booking', 
    logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/Booking.com_logo.svg/2560px-Booking.com_logo.svg.png' 
  },
  { 
    name: 'Expedia', 
    logo: Expedia
  },
  { 
    name: 'TripAdvisor', 
    logo: TripAdvisor
  },
  { 
    name: 'Skyscanner', 
    logo: Skyscanner 
  },
  { 
    name: 'Hotels.com', 
    logo: Hotel
  },
  { 
    name: 'Agoda', 
    logo: Agoda
  }
];

const TrustedCompanies = () => {
  return (
    <section className="py-20 bg-white border-y border-gray-100">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-16">
          <h3 className="text-sky-500 font-semibold text-lg mb-2">Our Partners</h3>
          <h2 className="text-4xl lg:text-5xl font-bold text-gray-900 mb-4">
            Trusted By Industry Leaders
          </h2>
          <p className="text-gray-600 text-lg max-w-2xl mx-auto">
            We partner with the world's leading travel companies to bring you the best experiences.
          </p>
        </div>

        {/* Sliding Companies */}
        <div className="relative overflow-hidden">
          <div className="flex items-center">
            {/* Infinite scrolling container */}
            <div className="flex animate-infinite-scroll whitespace-nowrap">
              {companies.map((company, index) => (
                <div
                  key={`first-${index}`}
                  className="inline-flex items-center justify-center mx-8 group"
                >
                  <div className="bg-gray-50 hover:bg-sky-50 rounded-2xl p-6 w-48 h-32 flex items-center justify-center transition-all duration-300 group-hover:shadow-lg">
                    <img 
                      src={company.logo} 
                      alt={company.name}
                      className="h-20 w-full object-contain object-center grayscale opacity-70 group-hover:grayscale-0 group-hover:opacity-100 transition-all duration-300 px-2"
                    />
                  </div>
                </div>
              ))}
              {/* Duplicate for seamless looping */}
              {companies.map((company, index) => (
                <div
                  key={`second-${index}`}
                  className="inline-flex items-center justify-center mx-8 group"
                >
                  <div className="bg-gray-50 hover:bg-sky-50 rounded-2xl p-6 w-48 h-32 flex items-center justify-center transition-all duration-300 group-hover:shadow-lg">
                    <img 
                      src={company.logo} 
                      alt={company.name}
                      className="h-20 w-full object-contain object-center grayscale opacity-70 group-hover:grayscale-0 group-hover:opacity-100 transition-all duration-300 px-2"
                    />
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-8 mt-16 pt-16 border-t border-gray-100">
          <div className="text-center">
            <div className="text-4xl font-bold text-sky-500 mb-2">50K+</div>
            <div className="text-gray-600 font-medium">Happy Travelers</div>
          </div>
          <div className="text-center">
            <div className="text-4xl font-bold text-sky-500 mb-2">200+</div>
            <div className="text-gray-600 font-medium">Destinations</div>
          </div>
          <div className="text-center">
            <div className="text-4xl font-bold text-sky-500 mb-2">15+</div>
            <div className="text-gray-600 font-medium">Years Experience</div>
          </div>
          <div className="text-center">
            <div className="text-4xl font-bold text-sky-500 mb-2">24/7</div>
            <div className="text-gray-600 font-medium">Support</div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default TrustedCompanies;


VALUES SOLVED  
import { useEffect, useState } from 'react';

// Improved Counter component that handles different formats
const Counter = ({ value, duration = 2000 }) => {
  const [count, setCount] = useState(0);
  const [suffix, setSuffix] = useState('');

  useEffect(() => {
    // Extract numeric value and suffix from the prop
    const numericMatch = value.match(/\d+/);
    if (!numericMatch) {
      setSuffix(value); // For values like "24/7" that don't contain a plain number
      return;
    }

    const numericValue = parseInt(numericMatch[0]);
    const extractedSuffix = value.replace(numericMatch[0], '');
    setSuffix(extractedSuffix);

    let start = 0;
    const increment = numericValue / (duration / 16); // 60fps

    const timer = setInterval(() => {
      start += increment;
      if (start >= numericValue) {
        setCount(numericValue);
        clearInterval(timer);
      } else {
        setCount(Math.floor(start));
      }
    }, 16);

    return () => clearInterval(timer);
  }, [value, duration]);

  return (
    <div className="text-4xl font-bold text-sky-500 mb-2">
      {suffix === '/7' ? '24/7' : `${count.toLocaleString()}${suffix}`}
    </div>
  );
};

const TrustedCompanies = () => {
  // ... (keep all your existing imports and companies array)

  return (
    <section className="py-20 bg-white border-y border-gray-100">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* ... (keep all your existing header and sliding companies code) */}

        {/* Stats with animated counters */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-8 mt-16 pt-16 border-t border-gray-100">
          <div className="text-center">
            <Counter value="50K+" />
            <div className="text-gray-600 font-medium">Happy Travelers</div>
          </div>
          <div className="text-center">
            <Counter value="200+" />
            <div className="text-gray-600 font-medium">Destinations</div>
          </div>
          <div className="text-center">
            <Counter value="15+" />
            <div className="text-gray-600 font-medium">Years Experience</div>
          </div>
          <div className="text-center">
            <Counter value="24/7" />
            <div className="text-gray-600 font-medium">Support</div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default TrustedCompanies;
